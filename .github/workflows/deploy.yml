name: Build And Deploy

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  AZURE_ACR_REPOSITORY: telegram-support-bot
  REGISTRY: samvirk
  ENVIRONMENT: production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set BOT_TOKEN
        uses: jacobtomlinson/gha-find-replace@master
        with:
          include: "**/config.yaml"
          find: "BOT_TOKEN"
          replace: "${{ secrets.BOT_TOKEN }}"

      - name: Set STAFFCHAT_ID
        uses: jacobtomlinson/gha-find-replace@master
        with:
          include: "**/config.yaml"
          find: "STAFFCHAT_ID"
          replace: "${{ secrets.STAFFCHAT_ID }}"

      - name: Set OWNER_ID
        uses: jacobtomlinson/gha-find-replace@master
        with:
          include: "**/config.yaml"
          find: "OWNER_ID"
          replace: "${{ secrets.OWNER_ID }}"

      - name: Build
        run: docker build . -t ${{ env.REGISTRY }}.azurecr.io/${{ env.AZURE_ACR_REPOSITORY }}:${{ github.sha }}

      - name: Push to ACR
        run: docker push ${{ env.REGISTRY }}.azurecr.io/${{ env.AZURE_ACR_REPOSITORY }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy bicep
        uses: azure/CLI@v1
        with:
          inlineScript: |
            resourceGroup=rg-samvirk-${{ env.ENVIRONMENT }}
            az group create -g $resourceGroup -l northeurope
            az deployment group create -g $resourceGroup -f ./deployment/main-bot.bicep \
             -p \
                environmentName=${{ env.ENVIRONMENT }} \
                containerImage=${{ env.AZURE_ACR_REPOSITORY }}:${{ github.sha }} \
                dbPassword=${{ secrets.DB_PASSWORD }}